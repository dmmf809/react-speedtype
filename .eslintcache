[{"C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\index.js":"1","C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\App.js":"2","C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\useLogic.js":"3"},{"size":197,"mtime":1607538935292,"results":"4","hashOfConfig":"5"},{"size":742,"mtime":1607555720497,"results":"6","hashOfConfig":"5"},{"size":1229,"mtime":1607555766215,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"t0fod1",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\index.js",[],["16","17"],"C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\App.js",[],"C:\\Users\\daeni\\Desktop\\Projects\\ReactProj1-hooks\\speed-type-game\\src\\useLogic.js",["18"],"import { useState, useEffect, useRef } from 'react'\r\n\r\nexport const useLogic = (startingTime = 20) => {\r\n\r\n  const [text, setText] = useState('')\r\n  const [time, setTime] = useState(startingTime)\r\n  const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n  const [wordCount, setWordCount] = useState(0)\r\n  const textBoxRef = useRef(null)\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target\r\n    setText(value)\r\n  }\r\n\r\n  const countWords = (str) => {\r\n    const words = str.trim().split(\" \")\r\n    return words.filter(word => word !== \"\").length\r\n  }\r\n\r\n  const startGame = () => {\r\n    setIsTimeRunning(true)\r\n    setTime(startingTime)\r\n    setText('')\r\n    setWordCount(0)\r\n    textBoxRef.current.disabled = false\r\n    textBoxRef.current.focus()\r\n  }\r\n\r\n  const endGame = () => {\r\n    setIsTimeRunning(false)\r\n    setWordCount(countWords(text))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isTimeRunning && time > 0) {\r\n      setTimeout(() => {\r\n        setTime(oldTime => oldTime - 1)\r\n        }, 1000)\r\n    } else if(time === 0) {\r\n      endGame()\r\n    }\r\n  }, [time, isTimeRunning])\r\n\r\n  return {\r\n    handleChange,\r\n    startGame, \r\n    wordCount, \r\n    text, \r\n    textBoxRef, \r\n    isTimeRunning,\r\n    time\r\n  }\r\n}",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":43,"column":6,"nodeType":"25","endLine":43,"endColumn":27,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'endGame'. Either include it or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [time, isTimeRunning, endGame]",{"range":"32","text":"33"},[1072,1093],"[time, isTimeRunning, endGame]"]